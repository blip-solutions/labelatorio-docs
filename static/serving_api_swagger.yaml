openapi: 3.0.2
info:
  title: Labelator.io Serving
  description: |-
    Hosting API for Labelator.io models
        allows management via Labelator.io configuration
        
  version: 1.0.0
  
servers:
  - url: https://api.labelator.io/nodes/{tennant_id}/{node_name}
    variables:
      tennant_id:
        default: demo
        description: Tennant ID assigned by the service provider
      node_name:
        default: Node-1
        description: The name of the node


paths:
  /:
    get:
      summary: Get node status
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /predict:
    post:
      summary: Get predictions for request
      description: |-
        Allows query predictions for one or more texts

            If final handling is manual or manual-review, data will be added to labelatorio project (unlest test mode is activated  ./predict?test=true)
            For this it is recomended to list of string, but rather list of objects, cointaing key, text and optional contextData. This will allow additional data to be send to Labelator.io.

            If explain mode activated ( ./predict?explain=true), response will contain explanations for all routing configuration for better understanding of the decision

            Settings parameter is to enable query with custom settings for particular request. It is generaly not recomended to use this in production since it can rapidly decrease the performance. 
            Especialy if new settings are pointing to model that has not been preloaded by defaul configuration
      operationId: predict_predict_post
      parameters:
        - required: false
          schema:
            title: Model Name
            type: string
          name: model_name
          in: query
        - required: false
          schema:
            title: Explain
            type: boolean
            default: false
          name: explain
          in: query
        - required: false
          schema:
            title: Test
            type: boolean
            default: false
          name: test
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictRequestBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictctRespone'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /errors:
    get:
      tags:
        - errors
      summary: 'Get list of records, that were not uploaded to Labelator.io successfuly '
      operationId: get_errors_errors_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Errors Errors Get
                type: array
                items:
                  type: object
    delete:
      tags:
        - errors
      summary: Clear errors without pushing to Labelator.io
      operationId: retry_errors_errors_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Retry Errors Errors Delete
                type: object
  /errors/retry:
    post:
      tags:
        - errors
      summary: Retry push documents to Labelator.io
      operationId: retry_errors_errors_retry_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Retry Errors Errors Retry Post
                type: object
  /refresh:
    post:
      summary: Force node to refresh latest configuration from Labelator.io
      operationId: refresh_refresh_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    FloatRange:
      title: FloatRange
      required:
        - max
        - min
      type: object
      properties:
        max:
          title: Max
          type: number
        min:
          title: Min
          type: number
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ModelSettings:
      title: ModelSettings
      required:
        - project_id
        - model_name
        - task_type
      type: object
      properties:
        project_id:
          title: Project Id
          type: string
        model_name:
          title: Model Name
          type: string
        similarity_model:
          title: Similarity Model
          type: string
        task_type:
          title: Task Type
          type: string
        routing:
          title: Routing
          type: array
          items:
            $ref: '#/components/schemas/RoutingSetting'
        default_handling:
          title: Default Handling
          type: string
          default: model-auto
        min_prediction_score:
          title: Min Prediction Score
          type: number
          default: 0.5
    PredictRequestBody:
      title: PredictRequestBody
      required:
        - texts
      type: object
      properties:
        texts:
          title: Texts
          type: array
          items:
            anyOf:
              - type: string
              - $ref: '#/components/schemas/PredictionRequestRecord'
        settings:
          title: Settings
          anyOf:
            - type: object
            - $ref: '#/components/schemas/ModelSettings'
    PredictctRespone:
      title: PredictctRespone
      required:
        - predictions
      type: object
      properties:
        predictions:
          title: Predictions
          type: array
          items:
            $ref: '#/components/schemas/PredictedItem'
    PredictedItem:
      title: PredictedItem
      required:
        - handling
      type: object
      properties:
        predicted:
          title: Predicted
          type: array
          items:
            $ref: '#/components/schemas/Prediction'
        handling:
          title: Handling
          type: string
        key:
          title: Key
          type: string
        explanations:
          title: Explanations
          type: array
          items:
            $ref: '#/components/schemas/RouteExplanation'
    Prediction:
      title: Prediction
      required:
        - label
        - score
      type: object
      properties:
        label:
          title: Label
          type: string
        score:
          title: Score
          type: number
    PredictionMatchExplanation:
      title: PredictionMatchExplanation
      required:
        - prediction
        - matched
      type: object
      properties:
        prediction:
          $ref: '#/components/schemas/Prediction'
        matched:
          title: Matched
          type: boolean
    PredictionRequestRecord:
      title: PredictionRequestRecord
      required:
        - key
        - text
      type: object
      properties:
        key:
          title: Key
          type: string
        text:
          title: Text
          type: string
        contextData:
          title: Contextdata
          type: object
          additionalProperties:
            type: string
        reviewProjectId:
          title: Reviewprojectid
          type: string
    RouteExplanation:
      title: RouteExplanation
      required:
        - route_id
        - route_type
        - route_handling
        - matched
        - used
      type: object
      properties:
        route_id:
          title: Route Id
          type: integer
        route_type:
          title: Route Type
          type: string
        route_handling:
          title: Route Handling
          type: string
        matched:
          title: Matched
          type: boolean
        used:
          title: Used
          type: boolean
        matched_prediction:
          title: Matched Prediction
          type: array
          items:
            $ref: '#/components/schemas/PredictionMatchExplanation'
        matched_similar:
          title: Matched Similar
          type: boolean
        matched_similar_examples:
          title: Matched Similar Examples
          type: array
          items:
            $ref: '#/components/schemas/SimilarExample'
        matched_regex:
          title: Matched Regex
          type: boolean
    RoutingSetting:
      title: RoutingSetting
      required:
        - anchors
        - rule_type
        - handling
      type: object
      properties:
        anchors:
          title: Anchors
          type: array
          items:
            type: string
        rule_type:
          title: Rule Type
          type: string
        handling:
          title: Handling
          type: string
        similarity_range:
          $ref: '#/components/schemas/FloatRange'
        predicted_labels:
          title: Predicted Labels
          type: array
          items:
            type: string
        prediction_score_range:
          $ref: '#/components/schemas/FloatRange'
        name:
          title: Name
          type: string
        regex:
          title: Regex
          type: string
    SimilarExample:
      title: SimilarExample
      required:
        - text
        - score
      type: object
      properties:
        text:
          title: Text
          type: string
        score:
          title: Score
          type: number
        labels:
          title: Labels
          type: array
          items:
            type: string
        correctly_predicted:
          title: Correctly Predicted
          type: boolean
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        body:
          title: Body
          type: array
          items:
            type: string
